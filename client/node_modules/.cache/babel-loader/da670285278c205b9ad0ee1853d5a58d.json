{"ast":null,"code":"var _jsxFileName = \"/Users/oriannegilaad/Desktop/code/react-cypress/client/src/components/NotesList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add'; // import './css/style.css';\n\nimport api from '../api/notes';\nimport PostShorthand from './NoteShorthand';\nimport UpdatePost from './UpdateNote';\nimport AddPost from './AddNote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostsList = props => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [selected, setSelected] = useState();\n  const [isAddPost, setIsAddPost] = useState(false);\n  useEffect(() => {\n    try {\n      const getPosts = async () => {\n        const postList = await retrievePosts();\n        if (postList) setPosts(postList);\n\n        if (postList.length > 0) {\n          setSelected(postList[0]);\n        }\n\n        ;\n      };\n\n      getPosts();\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  useEffect(() => {\n    removeEmpyNote(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selected]);\n\n  const removeEmpyNote = () => {\n    posts.forEach(x => {\n      if ((x.title === null || x.title === '') && (x.content === null || x.content === '')) {\n        deletePostHandler(x.id);\n      }\n\n      ;\n    });\n  };\n\n  const retrievePosts = async () => {\n    const response = await api.get('/notes');\n    return response.data;\n  };\n\n  const deletePostHandler = async id => {\n    await api.delete(`/notes/${id}`);\n    const newPostsList = posts.filter(post => {\n      return post.id !== id;\n    });\n    setPosts(newPostsList);\n  };\n\n  const handleAddPost = () => {\n    console.log(\"here\");\n    setIsAddPost(true);\n    setSelected();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postsShort\",\n        children: [posts === null || posts === void 0 ? void 0 : posts.map(post => {\n          return /*#__PURE__*/_jsxDEV(PostShorthand, {\n            selected: selected,\n            setSelected: setSelected,\n            post: post,\n            deletePostHandler: deletePostHandler,\n            setIsAddPost: setIsAddPost\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addButtonContainer\",\n          children: /*#__PURE__*/_jsxDEV(Fab, {\n            id: \"fab\",\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {\n              onClick: () => handleAddPost()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '65%'\n        },\n        children: [selected && /*#__PURE__*/_jsxDEV(UpdatePost, {\n          deletePostHandler: deletePostHandler,\n          posts: posts,\n          setPosts: setPosts,\n          selected: selected,\n          setSelected: setSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), (isAddPost || posts.length < 1) && !selected && /*#__PURE__*/_jsxDEV(AddPost, {\n          setPosts: setPosts,\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostsList, \"LPUzBQezOeEtBY/7Fm+fSOhOeSs=\");\n\n_c = PostsList;\nexport default PostsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsList\");","map":{"version":3,"sources":["/Users/oriannegilaad/Desktop/code/react-cypress/client/src/components/NotesList.js"],"names":["React","useState","useEffect","Fab","AddIcon","api","PostShorthand","UpdatePost","AddPost","PostsList","props","posts","setPosts","selected","setSelected","isAddPost","setIsAddPost","getPosts","postList","retrievePosts","length","error","console","log","removeEmpyNote","forEach","x","title","content","deletePostHandler","id","response","get","data","delete","newPostsList","filter","post","handleAddPost","display","justifyContent","map","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\n// import './css/style.css';\nimport api from '../api/notes'\nimport PostShorthand from './NoteShorthand';\nimport UpdatePost from './UpdateNote';\nimport AddPost from './AddNote';\n\nconst PostsList = (props) => {\n  const [posts, setPosts] = useState([]);\n  const [selected, setSelected] = useState();\n  const [isAddPost, setIsAddPost] = useState(false);\n\n  useEffect(() => {\n    try {\n      const getPosts = async () => {\n        const postList = await retrievePosts();\n        if (postList) setPosts(postList);\n\n        if (postList.length > 0) {\n          setSelected(postList[0]);\n        };\n      };\n      getPosts();\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  useEffect(() => {\n    removeEmpyNote();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selected]);\n\n  const removeEmpyNote = () => { \n    posts.forEach(x => {\n      if ((x.title === null || x.title === '') && (x.content === null || x.content === '')) {\n        deletePostHandler(x.id);\n      };\n    });\n  };\n\n  const retrievePosts = async () => {\n    const response = await api.get('/notes');\n    return response.data;\n  };\n\n  const deletePostHandler = async (id) => {\n    await api.delete(`/notes/${id}`);\n    const newPostsList = posts.filter((post) => {\n      return post.id !== id;\n    });\n    setPosts(newPostsList);\n  };\n\n  const handleAddPost = () => {\n    console.log(\"here\")\n    setIsAddPost(true);\n    setSelected();\n  };\n \n  return (\n    <div className='container'>\n      <div style={{display:'flex', justifyContent: 'space-around'}}>\n        <div className=\"postsShort\">\n          {\n            posts?.map((post) => {\n              return (\n                <PostShorthand\n                  selected={selected}\n                  setSelected={setSelected}\n                  post={post}\n                  deletePostHandler={deletePostHandler}\n                  key={post.id}\n                  setIsAddPost={setIsAddPost}\n                />\n              )\n            })\n          }\n          <div className=\"addButtonContainer\">\n            <Fab id=\"fab\">\n              <AddIcon onClick={() => handleAddPost()}/>\n            </Fab>\n          </div>\n        </div>\n        <div style={{width: '65%'}}>\n          {selected &&\n            <UpdatePost deletePostHandler={deletePostHandler} posts={posts} setPosts={setPosts} selected={selected} setSelected={setSelected} /> \n          }\n          {\n            (isAddPost || posts.length < 1) && !selected && \n            <AddPost setPosts={setPosts} posts={posts} />\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostsList;"]},"metadata":{},"sourceType":"module"}