{"ast":null,"code":"var _jsxFileName = \"/Users/oriannegilaad/Desktop/code/react-cypress/client/src/components/AddNote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createRef } from 'react';\nimport { uuid } from 'uuidv4';\nimport api from '../api/notes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPost = ({\n  setPosts,\n  posts\n}) => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  let textareaRef = /*#__PURE__*/createRef();\n  const state = {\n    title,\n    content\n  };\n\n  const handleAddPost = async post => {\n    const request = {\n      id: uuid(),\n      ...post\n    };\n    const response = await api.post('/notes', request);\n    setPosts([response.data, ...posts]);\n  };\n\n  const add = e => {\n    e.preventDefault();\n\n    if (title === '' && content === '') {\n      return;\n    }\n\n    handleAddPost(state);\n    setTitle('');\n    setContent('');\n  };\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  function handleKeyUp(e) {\n    if (e.key === 'Enter' || e.keyCode === 13) {\n      textareaRef.current.focus();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: add,\n        children: [title.length < 1 && /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"noteTitle\",\n          children: \"Give this thought a title..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"title\",\n            value: title,\n            onKeyUp: handleKeyUp,\n            onChange: e => setTitle(capitalizeFirstLetter(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"content\",\n            value: content,\n            onChange: e => setContent(e.target.value),\n            ref: textareaRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"saveButtonContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"saveButton\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPost, \"OTvljkGZ3oDHjpEqZRGoAyVoe2c=\");\n\n_c = AddPost;\nexport default AddPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"sources":["/Users/oriannegilaad/Desktop/code/react-cypress/client/src/components/AddNote.js"],"names":["React","useState","createRef","uuid","api","AddPost","setPosts","posts","title","setTitle","content","setContent","textareaRef","state","handleAddPost","post","request","id","response","data","add","e","preventDefault","capitalizeFirstLetter","string","charAt","toUpperCase","slice","handleKeyUp","key","keyCode","current","focus","length","target","value"],"mappings":"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","sourcesContent":["import React, { useState, createRef } from 'react';\nimport { uuid } from 'uuidv4';\n\nimport api from '../api/notes';\n\nconst AddPost = ({setPosts, posts}) => {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  let textareaRef = createRef();\n  const state = {\n    title,\n    content,\n  };\n\n  const handleAddPost = async (post) => {\n    const request = {\n      id: uuid(),\n      ...post,\n    };\n\n    const response = await api.post('/notes', request);\n    setPosts([response.data, ...posts]);\n  };\n    \n  const add = (e) => {\n    e.preventDefault();\n    \n    if (title === '' && content === '') {\n      return;\n    }\n\n    handleAddPost(state);\n    setTitle('');\n    setContent('');\n  };\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  function handleKeyUp(e) {\n    if (e.key === 'Enter' || e.keyCode === 13) {\n      textareaRef.current.focus();\n    }\n  }\n\n  return (\n    <div className='main'>\n      <div className=\"formContainer\">\n        <form className='form' onSubmit={add}>\n          {title.length < 1 &&\n            <h3 className=\"noteTitle\">Give this thought a title..</h3>\n          }\n          <div className='field'>\n            <input\n              name='title'\n              value={title}\n              onKeyUp={handleKeyUp}\n              onChange={(e) => setTitle(capitalizeFirstLetter(e.target.value))}\n            />\n          </div>\n          <div className='field'>\n            <textarea\n              name='content'\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n              ref={textareaRef}\n            />\n          </div>\n          <div className=\"saveButtonContainer\">\n            <div className=\"saveButton\">\n              <button>Save</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddPost;"]},"metadata":{},"sourceType":"module"}