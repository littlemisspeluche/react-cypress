{"ast":null,"code":"var _jsxFileName = \"/Users/oriannegilaad/Downloads/React-CRUD-with-JSON-SERVER/client/src/components/UpdateNote.js\";\nimport React from 'react';\nimport api from '../api/notes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdatePost = ({\n  selected,\n  setSelected,\n  setPosts,\n  posts\n}) => {\n  const update = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (selected.title === '' && selected.content === '') {\n      return;\n    } else {\n      let selectedCopy = { ...selected\n      };\n\n      if (name === \"title\") {\n        selectedCopy['title'] = value ? value : '';\n      } else if (name === \"content\") {\n        selectedCopy['content'] = value ? value : '';\n      }\n\n      ;\n      setSelected(selectedCopy);\n      const state = {\n        id: selectedCopy.id,\n        title: selectedCopy.title,\n        content: selectedCopy.content\n      };\n      editPost(state);\n    }\n\n    ;\n  };\n\n  const editPost = async post => {\n    const response = await api.put(`/notes/${post.id}`, post);\n    const {\n      id\n    } = response.data;\n    setPosts(posts.map(post => {\n      return post.id === id ? { ...response.data\n      } : post;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"title\",\n            value: selected.title,\n            onChange: e => update(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"editFormTextarea\",\n            name: \"content\",\n            value: selected.content,\n            onChange: e => update(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px',\n            display: 'flex',\n            justifyContent: 'center'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = UpdatePost;\nexport default UpdatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"sources":["/Users/oriannegilaad/Downloads/React-CRUD-with-JSON-SERVER/client/src/components/UpdateNote.js"],"names":["React","api","UpdatePost","selected","setSelected","setPosts","posts","update","e","name","value","target","title","content","selectedCopy","state","id","editPost","post","response","put","data","map","marginTop","display","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,cAAhB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,WAAX;AAAwBC,EAAAA,QAAxB;AAAkCC,EAAAA;AAAlC,CAAD,KAA8C;AAC/D,QAAMC,MAAM,GAAIC,CAAD,IAAO;AACpB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;;AACA,QAAIR,QAAQ,CAACS,KAAT,KAAmB,EAAnB,IAAyBT,QAAQ,CAACU,OAAT,KAAqB,EAAlD,EAAsD;AACpD;AACD,KAFD,MAEO;AACL,UAAIC,YAAY,GAAG,EAAC,GAAGX;AAAJ,OAAnB;;AAEA,UAAIM,IAAI,KAAK,OAAb,EAAsB;AACpBK,QAAAA,YAAY,CAAC,OAAD,CAAZ,GAAwBJ,KAAK,GAAGA,KAAH,GAAW,EAAxC;AACD,OAFD,MAEO,IAAID,IAAI,KAAK,SAAb,EAAwB;AAC7BK,QAAAA,YAAY,CAAC,SAAD,CAAZ,GAA0BJ,KAAK,GAAGA,KAAH,GAAW,EAA1C;AACD;;AAAA;AAEDN,MAAAA,WAAW,CAACU,YAAD,CAAX;AAEA,YAAMC,KAAK,GAAG;AACZC,QAAAA,EAAE,EAAEF,YAAY,CAACE,EADL;AAEZJ,QAAAA,KAAK,EAAEE,YAAY,CAACF,KAFR;AAGZC,QAAAA,OAAO,EAAEC,YAAY,CAACD;AAHV,OAAd;AAMAI,MAAAA,QAAQ,CAACF,KAAD,CAAR;AACD;;AAAA;AACF,GAvBD;;AAyBA,QAAME,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC/B,UAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,GAAJ,CAAS,UAASF,IAAI,CAACF,EAAG,EAA1B,EAA6BE,IAA7B,CAAvB;AACA,UAAM;AAAEF,MAAAA;AAAF,QAASG,QAAQ,CAACE,IAAxB;AAEAhB,IAAAA,QAAQ,CACNC,KAAK,CAACgB,GAAN,CAAWJ,IAAD,IAAU;AAClB,aAAOA,IAAI,CAACF,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGG,QAAQ,CAACE;AAAd,OAAjB,GAAwCH,IAA/C;AACD,KAFD,CADM,CAAR;AAKD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,KAAK,EAAEf,QAAQ,CAACS,KAFlB;AAGE,YAAA,QAAQ,EAAGJ,CAAD,IAAOD,MAAM,CAACC,CAAD;AAHzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACE;AACE,YAAA,EAAE,EAAC,kBADL;AAEE,YAAA,IAAI,EAAC,SAFP;AAGE,YAAA,KAAK,EAAEL,QAAQ,CAACU,OAHlB;AAIE,YAAA,QAAQ,EAAGL,CAAD,IAAOD,MAAM,CAACC,CAAD;AAJzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF,eAgBE;AACE,UAAA,KAAK,EAAE;AACLe,YAAAA,SAAS,EAAE,MADN;AAELC,YAAAA,OAAO,EAAE,MAFJ;AAGLC,YAAAA,cAAc,EAAE;AAHX;AADT;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CApED;;KAAMvB,U;AAsEN,eAAeA,UAAf","sourcesContent":["import React from 'react';\n\nimport api from '../api/notes';\n\nconst UpdatePost = ({selected, setSelected, setPosts, posts}) => {\n  const update = (e) => {\n    const {name, value} = e.target;\n    if (selected.title === '' && selected.content === '') {\n      return;\n    } else {\n      let selectedCopy = {...selected};\n  \n      if (name === \"title\") {\n        selectedCopy['title'] = value ? value : '';\n      } else if (name === \"content\") {\n        selectedCopy['content'] = value ? value : '';\n      };\n  \n      setSelected(selectedCopy);\n  \n      const state = {\n        id: selectedCopy.id,\n        title: selectedCopy.title,\n        content: selectedCopy.content,\n      };\n  \n      editPost(state);\n    };\n  };\n\n  const editPost = async (post) => {\n    const response = await api.put(`/notes/${post.id}`, post);\n    const { id } = response.data;\n    \n    setPosts(\n      posts.map((post) => {\n        return post.id === id ? { ...response.data } : post;\n      })\n    );\n  };\n  \n  return (\n    <div className='main'>\n      <div className=\"formContainer\">\n        <form className='form'>\n          <div className='field'>\n            <input\n              name='title'\n              value={selected.title}\n              onChange={(e) => update(e)}\n            />\n          </div>\n          <div className='field'>\n            <textarea\n              id=\"editFormTextarea\"\n              name='content'\n              value={selected.content}\n              onChange={(e) => update(e)}\n            />\n          </div>\n          <div\n            style={{\n              marginTop: '20px',\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default UpdatePost;"]},"metadata":{},"sourceType":"module"}